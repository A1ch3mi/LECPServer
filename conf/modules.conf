{
    "OmronFinsNet": {
        "PLC_DRIVER": "OmronFinsNet",
        "IP": "127.0.0.1",
        "PORT": "9600",
        "SA1": "202",
        "DA2": "0",
        "RECV_TIMEOUT": "2000",
        "DATAFORMAT": "CDAB",
        "STRING_REVERSE": "true",
        "FUNCTION": "JsProxyAPI.plcConnectOmronFinsNet(d['IP'], parseInt(d['PORT']), parseInt(d['SA1']), parseInt(d['DA2'])",
        "TYPE": "TCP"
    },
    "OmronFinsUdp": {
        "PLC_DRIVER": "OmronFinsUdp",
        "IP": "127.0.0.1",
        "PORT": "9600",
        "SA1": "202",
        "DA2": "0",
        "DATAFORMAT": "CDAB",
        "STRING_REVERSE": "true",
        "FUNCTION": "JsProxyAPI.plcConnectOmronFinsUdp(d['IP'], parseInt(d['PORT']), parseInt(d['SA1']), parseInt(d['DA2'])",
        "TYPE": "UDP"
    },
    "OmronHostLinkSerial": {
        "PLC_DRIVER": "OmronHostLinkSerial",
        "PORT": "COM1",
        "BAUD_RATE": "9600",
        "DATA_BITS": "8",
        "STOP_BITS": "1",
        "PARITY": "NONE",
        "UNIT_NUM": "1",
        "SID": "1",
        "DA2": "0",
        "SA2": "1",
        "DATAFORMAT": "CDAB",
        "STRING_REVERSE": "true",
        "FUNCTION": "JsProxyAPI.plcConnectOmronHostLinkSerial(d['PORT'], parseInt(d['BAUD_RATE']), parseInt(d['DATA_BITS']), parseFloat(d['STOP_BITS']), (d['PARITY']), parseInt(d['UNIT_NUM']), parseInt(d['SID']), parseInt(d['DA2']), parseInt(d['SA2'])",
        "TYPE": "SERIAL"
    },
    "OmronHostLinkCMode": {
        "PLC_DRIVER": "OmronHostLinkCMode",
        "PORT": "COM1",
        "BAUD_RATE": "9600",
        "DATA_BITS": "8",
        "STOP_BITS": "1",
        "PARITY": "NONE",
        "UNIT_NUM": "1",
        "DATAFORMAT": "CDAB",
        "STRING_REVERSE": "true",
        "FUNCTION": "JsProxyAPI.plcConnectOmronHostLinkCMode(d['PORT'], parseInt(d['BAUD_RATE']), parseInt(d['DATA_BITS']), parseFloat(d['STOP_BITS']), d['PARITY'], parseInt(d['UNIT_NUM'])",
        "TYPE": "SERIAL"
    },
    "MelsecMcNet": {
        "PLC_DRIVER": "MelsecMcNet",
        "IP": "127.0.0.1",
        "PORT": "6000",
        "RECV_TIMEOUT": "2000",
        "DATAFORMAT": "CDAB",
        "STRING_REVERSE": "true",
        "FUNCTION": "JsProxyAPI.plcConnectMelsecMcNet(d['IP'], parseInt(d['PORT'])",
        "TYPE": "TCP"
    },
    "MelsecMcUdp": {
        "PLC_DRIVER": "MelsecMcUdp",
        "IP": "127.0.0.1",
        "PORT": "6000",
        "DATAFORMAT": "CDAB",
        "STRING_REVERSE": "false",
        "FUNCTION": "JsProxyAPI.plcConnectMelsecMcUdp(d['IP'], parseInt(d['PORT'])",
        "TYPE": "UDP"
    },
    "SiemensS1200Net": {
        "PLC_DRIVER": "SiemensS1200Net",
        "IP": "127.0.0.1",
        "PORT": "102",
        "RACK": "0",
        "SLOT": "0",
        "RECV_TIMEOUT": "2000",
        "DATAFORMAT": "DCBA",
        "STRING_REVERSE": "false",
        "FUNCTION": "JsProxyAPI.plcConnectSiemensS7Net('S1200', d['IP'], parseInt(d['PORT']), parseInt(d['RACK']), parseInt(d['SLOT'])",
        "TYPE": "TCP"
    },
    "SiemensS1500Net": {
        "PLC_DRIVER": "SiemensS1500Net",
        "IP": "127.0.0.1",
        "PORT": "102",
        "RACK": "0",
        "SLOT": "0",
        "RECV_TIMEOUT": "2000",
        "DATAFORMAT": "DCBA",
        "STRING_REVERSE": "false",
        "FUNCTION": "JsProxyAPI.plcConnectSiemensS7Net('S1500', d['IP'], parseInt(d['PORT']), parseInt(d['RACK']), parseInt(d['SLOT'])",
        "TYPE": "TCP"
    },
    "SiemensS200Net": {
        "PLC_DRIVER": "SiemensS200Net",
        "IP": "127.0.0.1",
        "PORT": "102",
        "RACK": "0",
        "SLOT": "0",
        "RECV_TIMEOUT": "2000",
        "DATAFORMAT": "DCBA",
        "STRING_REVERSE": "false",
        "FUNCTION": "JsProxyAPI.plcConnectSiemensS7Net('S200', d['IP'], parseInt(d['PORT']), parseInt(d['RACK']), parseInt(d['SLOT'])",
        "TYPE": "TCP"
    },
    "SiemensS200SMARTNet": {
        "PLC_DRIVER": "SiemensS200SMARTNet",
        "IP": "127.0.0.1",
        "PORT": "102",
        "RACK": "0",
        "SLOT": "0",
        "RECV_TIMEOUT": "2000",
        "DATAFORMAT": "DCBA",
        "STRING_REVERSE": "false",
        "FUNCTION": "JsProxyAPI.plcConnectSiemensS7Net('S200SMART', d['IP'], parseInt(d['PORT']), parseInt(d['RACK']), parseInt(d['SLOT'])",
        "TYPE": "TCP"
    },
    "SiemensS400TNet": {
        "PLC_DRIVER": "SiemensS400TNet",
        "IP": "127.0.0.1",
        "PORT": "102",
        "RACK": "0",
        "SLOT": "0",
        "RECV_TIMEOUT": "2000",
        "DATAFORMAT": "DCBA",
        "STRING_REVERSE": "false",
        "FUNCTION": "JsProxyAPI.plcConnectSiemensS7Net('S400', d['IP'], parseInt(d['PORT']), parseInt(d['RACK']), parseInt(d['SLOT'])",
        "TYPE": "TCP"
    },
    "KeyenceMcNet": {
        "PLC_DRIVER": "KeyenceMcNet",
        "IP": "127.0.0.1",
        "PORT": "3200",
        "RECV_TIMEOUT": "2000",
        "DATAFORMAT": "CDAB",
        "STRING_REVERSE": "true",
        "FUNCTION": "JsProxyAPI.plcConnectKeyenceMcNet(d['IP'], parseInt(d['PORT'])",
        "TYPE": "TCP"
    },
    "PanasonicMcNet": {
        "PLC_DRIVER": "PanasonicMcNet",
        "IP": "127.0.0.1",
        "PORT": "5000",
        "RECV_TIMEOUT": "2000",
        "DATAFORMAT": "CDAB",
        "STRING_REVERSE": "true",
        "FUNCTION": "JsProxyAPI.plcConnectPanasonicMcNet(d['IP'], parseInt(d['PORT'])",
        "TYPE": "TCP"
    },
    "PanasonicMewtocol": {
        "PLC_DRIVER": "PanasonicMewtocol",
        "PORT": "COM1",
        "BAUD_RATE": "9600",
        "DATA_BITS": "8",
        "STOP_BITS": "1",
        "PARITY": "NONE",
        "UNIT_NUM": "1",
        "DATAFORMAT": "CDAB",
        "STRING_REVERSE": "true",
        "FUNCTION": "JsProxyAPI.plcConnectPanasonicMewtocol(d['PORT'], parseInt(d['BAUD_RATE']), parseInt(d['DATA_BITS']), parseFloat(d['STOP_BITS']), d['PARITY'], parseInt(d['UNIT_NUM'])",
        "TYPE": "SERIAL"
    },
    "SchneiderModbusNet": {
        "PLC_DRIVER": "SchneiderModbusNet",
        "IP": "127.0.0.1",
        "PORT": "502",
        "SLAVEID": "1",
        "RECV_TIMEOUT": "2000",
        "DATAFORMAT": "CDAB",
        "STRING_REVERSE": "true",
        "FUNCTION": "JsProxyAPI.plcConnectModbusTcpNet(d['IP'], parseInt(d['PORT']), parseInt(d['SLAVEID'])",
        "TYPE": "MODBUSTCP"
    }
}